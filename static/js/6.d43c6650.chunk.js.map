{"version":3,"sources":["components/Header.jsx","components/Skills.jsx"],"names":["Header","props","title","_jsx","className","children","styles","iconStyle","height","width","introTextContainer","whiteSpace","Skills","_data$skills","header","data","setData","useState","init","setInit","useEffect","skills","initParticlesEngine","async","loadFull","engine","then","_jsxs","Particles","options","particlesOptions","Fade","Container","intro","style","ReactMarkdown","map","rows","items","item","display","type","onClick","newData","JSON","parse","stringify","skill","show","handleToggle","src","icon","alt","margin","detail","FallbackSpinner"],"mappings":"46DAAA,6BAaeA,UATf,SAAgBC,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,kCCPA,oGAYA,MAAMI,EAAS,CACbC,UAAW,CACTC,OAAQ,GACRC,MAAO,IAETC,mBAAoB,CAClBC,WAAY,aAuGDC,UAnGf,SAAgBX,GAAQ,IAADY,EACrB,MAAM,OAAEC,GAAWb,GACZc,EAAMC,GAAWC,mBAAS,OAC1BC,EAAMC,GAAWF,oBAAS,GAgCjC,OAZAG,qBAAU,KACRJ,EAAQK,GACJH,GAGJI,aAAoBC,gBACZC,YAASC,EAAO,IACrBC,MAAK,KACNP,GAAQ,EAAK,GACb,GACD,CAACD,IAGFS,eAAA,OAAAtB,SAAA,CACGa,GAAQf,cAACyB,IAAS,CAACC,QAASC,IAC7B3B,cAACH,UAAM,CAACE,MAAOY,IACdC,EACCZ,cAAC4B,IAAI,CAAA1B,SACHF,cAAA,OAAKC,UAAU,4BAA2BC,SACxCsB,eAACK,IAAS,CAAA3B,SAAA,EArCO4B,EAsCIlB,EAAKkB,MArClC9B,cAAA,MAAI+B,MAAO5B,EAAOI,mBAAmBL,SACnCF,cAACgC,IAAa,CAAA9B,SAAE4B,OAqCI,QADkBpB,EAC7BE,EAAKM,cAAM,IAAAR,OAAA,EAAXA,EAAauB,KAAKC,GACjBV,eAAA,OAAAtB,SAAA,CACEF,cAAA,SACAA,cAAA,MAAAE,SAAKgC,EAAKnC,QACTmC,EAAKC,MAAMF,KAAKG,GACfZ,eAAA,OAAsBO,MAAO,CAAEM,QAAS,gBAAiBnC,SAAA,CACvDF,cAAA,UACEsC,KAAK,SACLrC,UAAU,UACVsC,QAASA,MA1C/B,SAAsBxC,GACpB,MAAMyC,EAAUC,KAAKC,MAAMD,KAAKE,UAAU/B,IAC1C4B,EAAQtB,OAAOe,KAAKW,IAClBA,EAAMT,MAAMF,KAAKG,IACXA,EAAKrC,QAAUA,IACjBqC,EAAKS,MAAQT,EAAKS,KACpB,GACA,IAEJhC,EAAQ2B,EACV,CAiCwBM,CAAaV,EAAKrC,MAAM,EACxBG,SAEFF,cAAA,OACE+B,MAAO5B,EAAOC,UACd2C,IAAKX,EAAKY,KACVC,IAAKb,EAAKrC,UAGdC,cAAA,KAAAE,SAAIkC,EAAKrC,UAdDqC,EAAKrC,WAJTmC,EAAKnC,SAuBhBa,EAAKM,OAAOe,KAAKW,GAChB5C,cAAA,OAAuBC,UAAU,mBAAkBC,SAChD0C,EAAMT,MAAMF,KACVG,GACCA,EAAKS,MACH7C,cAAA,OAAKC,UAAU,aAAYC,SACzBsB,eAAA,OAAKO,MAAO,CAAEmB,OAAQ,IAAKhD,SAAA,CACzBF,cAAA,OAAKC,UAAU,KAAIC,SACjBF,cAACgC,IAAa,CAAA9B,SAAEkC,EAAKrC,UAEvBC,cAACgC,IAAa,CAAA9B,SAAEkC,EAAKe,aALQf,EAAKrC,UAJpC6C,EAAM7C,gBAoBxBC,cAACoD,UAAe,OApFKtB,KAwF7B,C","file":"static/js/6.d43c6650.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../index.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport PropTypes from \"prop-types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport skills from \"../constants/skills.json\";\nimport particlesOptions from \"../particles.json\";\nimport Particles, {initParticlesEngine} from \"@tsparticles/react\";\nimport {loadFull} from \"tsparticles\";\n\nconst styles = {\n  iconStyle: {\n    height: 75,\n    width: 75,\n  },\n  introTextContainer: {\n    whiteSpace: \"pre-wrap\",\n  },\n};\n\nfunction Skills(props) {\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [init, setInit] = useState(false);\n\n  const renderSkillsIntro = (intro) => (\n    <h4 style={styles.introTextContainer}>\n      <ReactMarkdown>{intro}</ReactMarkdown>\n    </h4>\n  );\n\n  function handleToggle(title) {\n    const newData = JSON.parse(JSON.stringify(data));\n    newData.skills.map((skill) => {\n      skill.items.map((item) => {\n        if (item.title === title) {\n          item.show = !item.show;\n        }\n      });\n    });\n    setData(newData);\n  }\n\n  useEffect(() => {\n    setData(skills);\n    if (init) {\n      return;\n    }\n    initParticlesEngine(async (engine) => {\n      await loadFull(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, [init]);\n\n  return (\n    <div>\n      {init && <Particles options={particlesOptions}/>}\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div className=\"section-content-container\">\n            <Container>\n              {renderSkillsIntro(data.intro)}\n              {data.skills?.map((rows) => (\n                <div key={rows.title}>\n                  <br />\n                  <h3>{rows.title}</h3>\n                  {rows.items.map((item) => (\n                    <div key={item.title} style={{ display: \"inline-block\" }}>\n                      <button\n                        type=\"button\"\n                        className=\"btn m-1\"\n                        onClick={() => {\n                          handleToggle(item.title);\n                        }}\n                      >\n                        <img\n                          style={styles.iconStyle}\n                          src={item.icon}\n                          alt={item.title}\n                        />\n                      </button>\n                      <p>{item.title}</p>\n                    </div>\n                  ))}\n                </div>\n              ))}\n              {data.skills.map((skill) => (\n                <div key={skill.title} className=\"skills-container\">\n                  {skill.items.map(\n                    (item) =>\n                      item.show && (\n                        <div className=\"skill-item\" key={item.title}>\n                          <div style={{ margin: 10 }}>\n                            <div className=\"h4\">\n                              <ReactMarkdown>{item.title}</ReactMarkdown>\n                            </div>\n                            <ReactMarkdown>{item.detail}</ReactMarkdown>\n                          </div>\n                        </div>\n                      )\n                  )}\n                </div>\n              ))}\n            </Container>\n          </div>\n        </Fade>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </div>\n  );\n}\n\nSkills.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Skills;\n"],"sourceRoot":""}