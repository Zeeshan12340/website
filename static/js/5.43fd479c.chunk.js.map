{"version":3,"sources":["components/Header.jsx","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","components/About.jsx"],"names":["Header","props","title","_jsx","className","children","Row","React","_ref","ref","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","concat","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName","Col","colProps","spans","span","offset","order","useCol","length","styles","introTextContainer","margin","flexDirection","whiteSpace","textAlign","fontSize","fontWeight","introImageContainer","justifyContent","alignItems","display","imageStyle","width","About","header","data","setData","useState","init","setInit","useEffect","about","initParticlesEngine","async","loadFull","engine","then","_jsxs","Particles","options","particlesOptions","Container","Fade","style","text","ReactMarkdown","src","imageSource","alt","FallbackSpinner"],"mappings":"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","file":"static/js/5.43fd479c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../index.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { Fade } from 'react-awesome-reveal';\nimport Header from './Header';\nimport FallbackSpinner from './FallbackSpinner';\nimport about from '../constants/about.json';\nimport particlesOptions from \"../particles.json\";\nimport Particles, {initParticlesEngine} from \"@tsparticles/react\";\nimport {loadFull} from \"tsparticles\";\n\nconst styles = {\n  introTextContainer: {\n    margin: 10,\n    flexDirection: 'column',\n    whiteSpace: 'pre-wrap',\n    textAlign: 'left',\n    fontSize: '1.2em',\n    fontWeight: 500,\n  },\n  introImageContainer: {\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  imageStyle: {\n    margin: 10,\n    width: '500px',\n    display: 'flex',\n  },\n};\n\nfunction About(props) {\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [init, setInit] = useState(false);\n\n  const parseIntro = (text) => (\n    <ReactMarkdown>{text}</ReactMarkdown>\n  );\n\n  useEffect(() => {\n    setData(about)\n    if (init) {\n      return;\n    }\n    initParticlesEngine(async (engine) => {\n      await loadFull(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, [init]);\n\n  return (\n    <div>\n      {init && <Particles options={particlesOptions}/>}\n      <Header title={header} />\n      <div className=\"section-content-container\">\n        <Container>\n          {data\n            ? (\n              <Fade>\n                <Row>\n                  <Col style={styles.introTextContainer}>\n                    {parseIntro(data.about)}\n                  </Col>\n                  <Col style={styles.introImageContainer}>\n                    <img src={data?.imageSource} alt=\"profile\" style={styles.imageStyle} />\n                  </Col>\n                </Row>\n              </Fade>\n            )\n            : <FallbackSpinner />}\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nAbout.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default About;\n"],"sourceRoot":""}