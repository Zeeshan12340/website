{"version":3,"sources":["components/Header.jsx","components/Skills.jsx"],"names":["Header","props","title","_jsx","className","children","styles","iconStyle","height","width","introTextContainer","whiteSpace","Skills","_data$skills","header","data","setData","useState","useEffect","skills","_jsxs","_Fragment","Fade","Container","intro","style","ReactMarkdown","map","rows","index","items","item","display","type","onClick","newData","JSON","parse","stringify","skill","show","handleToggle","src","icon","alt","margin","detail","FallbackSpinner"],"mappings":"m7DAAA,6BAaeA,UATf,SAAgBC,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,kCCPA,4EASA,MAAMI,EAAS,CACbC,UAAW,CACTC,OAAQ,GACRC,MAAO,IAETC,mBAAoB,CAClBC,WAAY,aAsFDC,UAlFf,SAAgBX,GAAQ,IAADY,EACrB,MAAM,OAAEC,GAAWb,GACZc,EAAMC,GAAWC,mBAAS,MAwBjC,OAJAC,qBAAU,KACRF,EAAQG,EAAO,GACd,IAGDC,eAAAC,WAAA,CAAAhB,SAAA,CACEF,cAACH,UAAM,CAACE,MAAOY,IACdC,EACCZ,cAACmB,IAAI,CAAAjB,SACHF,cAAA,OAAKC,UAAU,4BAA2BC,SACxCe,eAACG,IAAS,CAAAlB,SAAA,EA5BOmB,EA6BIT,EAAKS,MA5BlCrB,cAAA,MAAIsB,MAAOnB,EAAOI,mBAAmBL,SACnCF,cAACuB,IAAa,CAACrB,SAAUmB,OA4BL,QADkBX,EAC7BE,EAAKI,cAAM,IAAAN,OAAA,EAAXA,EAAac,KAAI,CAACC,EAAMC,IACvBT,eAAA,OAAAf,SAAA,CACEF,cAAA,SACAA,cAAA,MAAAE,SAAKuB,EAAK1B,QACT0B,EAAKE,MAAMH,KAAI,CAACI,EAAMF,IACrB1B,cAAAkB,WAAA,CAAAhB,SACEe,eAAA,OAAiBK,MAAO,CAAEO,QAAS,gBAAiB3B,SAAA,CAClDF,cAAA,UAAQ8B,KAAK,SAAS7B,UAAU,UAAU8B,QAASA,MA/BzE,SAAsBhC,GACpB,MAAMiC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUvB,IAC1CoB,EAAQhB,OAAOQ,KAAKY,IAClBA,EAAMT,MAAMH,KAAKI,IACXA,EAAK7B,QAAUA,IACjB6B,EAAKS,MAAQT,EAAKS,KACpB,GACA,IAEJxB,EAAQmB,EACV,CAqBgFM,CAAaV,EAAK7B,MAAM,EAAEG,SAClFF,cAAA,OACEsB,MAAOnB,EAAOC,UAAWmC,IAAKX,EAAKY,KAAMC,IAAKb,EAAK7B,UAGvDC,cAAA,KAAAE,SAAI0B,EAAK7B,UAND2B,SALNA,KAiBXd,EAAKI,OAAOQ,KAAI,CAACY,EAAOV,IACvB1B,cAAAkB,WAAA,CAAAhB,SACEF,cAAA,OAAiBC,UAAU,yCAAwCC,SAChEkC,EAAMT,MAAMH,KAAI,CAACI,EAAMF,IACtB1B,cAAA,OAAAE,SACG0B,EAAKS,MACJpB,eAAA,OAAKK,MAAO,CAACoB,OAAQ,IAAIxC,SAAA,CACvBF,cAAA,OAAKC,UAAU,KAAIC,SACjBF,cAACuB,IAAa,CAACrB,SAAU0B,EAAK7B,UAEhCC,cAACuB,IAAa,CAACrB,SAAU0B,EAAKe,aAN1BjB,MAFJA,cAmBlB1B,cAAC4C,UAAe,OArEGvB,KAwE7B,C","file":"static/js/3.9750e383.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { Fade } from 'react-awesome-reveal';\nimport { Container } from 'react-bootstrap';\nimport Header from './Header';\nimport FallbackSpinner from './FallbackSpinner';\nimport skills from '../constants/skills.json';\n\nconst styles = {\n  iconStyle: {\n    height: 75,\n    width: 75,\n  },\n  introTextContainer: {\n    whiteSpace: 'pre-wrap',\n  },\n};\n\nfunction Skills(props) {\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  const renderSkillsIntro = (intro) => (\n    <h4 style={styles.introTextContainer}>\n      <ReactMarkdown children={intro} />\n    </h4>\n  );\n\n  function handleToggle(title) {\n    const newData = JSON.parse(JSON.stringify(data));\n    newData.skills.map((skill) => {\n      skill.items.map((item) => {\n        if (item.title === title) {\n          item.show = !item.show;\n        }\n      });\n    });\n    setData(newData);\n  }\n\n  useEffect(() => {\n    setData(skills)\n  }, [])\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div className=\"section-content-container\">\n            <Container>\n              {renderSkillsIntro(data.intro)}\n              {data.skills?.map((rows, index) => (\n                <div key={index}>\n                  <br />\n                  <h3>{rows.title}</h3>\n                  {rows.items.map((item, index) => (\n                    <>\n                      <div key={index} style={{ display: 'inline-block' }}>\n                        <button type=\"button\" className=\"btn m-1\" onClick={() => {handleToggle(item.title)}}>\n                          <img\n                            style={styles.iconStyle} src={item.icon} alt={item.title}\n                          />\n                        </button>\n                        <p>{item.title}</p>\n                      </div>\n                    </>\n                  ))}\n                </div>\n              ))}\n              {data.skills.map((skill, index) => (\n                <>\n                  <div key={index} className='d-flex flex-row justify-content-center'>\n                    {skill.items.map((item, index) => (\n                      <div key={index}>\n                        {item.show && (\n                          <div style={{margin: 10}}>\n                            <div className='h4'>\n                              <ReactMarkdown children={item.title} />\n                            </div>\n                            <ReactMarkdown children={item.detail} />\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </>\n              ))}\n            </Container>\n          </div>\n        </Fade>\n      ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nSkills.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Skills;\n"],"sourceRoot":""}